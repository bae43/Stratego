package server;

import java.rmi.RemoteException;

import model.StrategoBoard;
import util.Move;

public class StrategoServerImple implements StrategoServer {
	
	/** The last move registered by the server */
	private Move last;

	@Override
	public boolean isMoveValid(Move move) throws RemoteException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean takeMove(Move move) throws RemoteException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public StrategoBoard getBoard() throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Move getLastMove() throws RemoteException {
		return last;
	}

	
	//XXX Bryce's interface (combine?)
	
//	private Move last;
//	private boolean game = true;
//	
//	
//	//security issues with clients placing others' pieces?
//	//should we verify clients to color?
//	public void placePiece(byte color, int piece, int[][] loc){
//		
//	}
//
//	public void move(int[][] move) {
//		if (game == true) {
//			last = new Move(new int[] { move[0][0], move[0][1] }, new int[] {
//					move[1][0], move[1][1] });
//		}
//	}
//
//  Why have a Move class to abstract move data if we just pass it around as a 2d array?
//
//	public Move getLastMove() {
//		return last;
//	}

}
