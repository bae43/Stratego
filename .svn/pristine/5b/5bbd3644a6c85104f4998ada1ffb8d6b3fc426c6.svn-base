package client;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

public class PieceAdder extends JPanel {

	private static final long serialVersionUID = -5566049489973542977L;

	Images imgs;
	// panel of buttons
	JPanel bPane;

	JButton b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11;

	int curPiece;
	                         
	int[] piecesRemaining = new int[] { 1, 1, 6, 5, 5, 5, 5, 5, 3, 1, 1, 6 };

	public PieceAdder(Images imgs) {
		this.imgs = imgs;
		setOpaque(false);

		bPane = new JPanel();
		bPane.setOpaque(false);
		GridLayout gl2 = new GridLayout(3, 6);
		gl2.setHgap(5);
		gl2.setVgap(5);
		bPane.setLayout(gl2);

		// bPane.setMinimumSi8e(new Dimension(getWidth(), getHeight()));

		ButtonGroup bg = new ButtonGroup();

		b0 = new JButton("Flag");
		b0.setMinimumSize(new Dimension(150, 150));

		b0.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 0;
			}

		});
		bg.add(b0);
		bPane.add(b0);

		b1 = new JButton("Spy");
		b1.setMinimumSize(new Dimension(150, 150));

		b1.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 1;
			}

		});
		bg.add(b1);
		bPane.add(b1);

		b11 = new JButton("Bomb");
		b11.setMinimumSize(new Dimension(150, 150));

		b11.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 11;
			}

		});
		bg.add(b11);
		bPane.add(b11);

		bPane.add(new JLabel());
		bPane.add(new JLabel());

		b2 = new JButton("2");
		b2.setMinimumSize(new Dimension(150, 150));

		b2.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 2;
			}

		});
		bg.add(b2);
		bPane.add(b2);

		b3 = new JButton("3");
		b3.setMinimumSize(new Dimension(150, 150));

		b3.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 3;
			}

		});
		bg.add(b3);
		bPane.add(b3);

		b4 = new JButton("4");
		b4.setMinimumSize(new Dimension(150, 150));

		b4.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 4;
			}

		});
		bg.add(b4);
		bPane.add(b4);

		b5 = new JButton("5");
		b5.setMinimumSize(new Dimension(150, 150));

		b5.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 5;
			}

		});
		bg.add(b5);
		bPane.add(b5);

		b6 = new JButton("6");
		b6.setMinimumSize(new Dimension(150, 150));

		b6.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 6;
			}

		});
		bg.add(b6);
		bPane.add(b6);

		b7 = new JButton("7");
		b7.setMinimumSize(new Dimension(150, 150));

		b7.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 7;
			}

		});
		bg.add(b7);
		bPane.add(b7);

		b8 = new JButton("8");
		b8.setMinimumSize(new Dimension(150, 150));

		b8.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 8;
			}

		});
		bg.add(b8);
		bPane.add(b8);

		b9 = new JButton("9");
		b9.setMinimumSize(new Dimension(150, 150));

		b9.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 9;
			}

		});
		bg.add(b9);
		bPane.add(b9);

		b10 = new JButton("10");
		b10.setMinimumSize(new Dimension(150, 150));

		b10.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				curPiece = 10;
			}

		});
		bg.add(b10);
		bPane.add(b10);

		add(bPane);

	}

	public void paintComponent(Graphics g) {
		super.paintComponent(g);

		Graphics2D g2 = (Graphics2D) g;

		g.setColor(new Color(.1f, .4f, .6f, .5f));

		RoundRectangle2D roundedRectangle = new RoundRectangle2D.Float(0, 0,
				getWidth(), getHeight(), 25, 25);
		g2.fill(roundedRectangle);
	}

	public boolean takeOut() {
		if (piecesRemaining[curPiece] == 0) {
			return false;
		} else {
			piecesRemaining[curPiece] = piecesRemaining[curPiece] - 1;
			return true;
		}
	}

	public void putBack(int rank) {
		piecesRemaining[rank] = piecesRemaining[rank] + 1;
	}
}
